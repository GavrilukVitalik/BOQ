
Функция ДокументТолькоПросмотр ( ДокументОбъект ) Экспорт
	
	структураПрава = ПолучитьПраваНаИзменениеДокумента ( ДокументОбъект );
	Возврат структураПрава.Отказ;
	
КонецФункции

Функция ПолучитьПраваНаИзменениеДокумента ( ДокументОбъект ) Экспорт 
	
	структураПрав = Новый Структура ( "Отказ", ИСТИНА );
	типДокумента = ДокументОбъект.Метаданные ().Имя;
	стр = "
	|выбрать
	|	РольПользователь,
	|	ДатаНачала,
	|	ДатаОкончания,
	|	ТипДокумента,
	|	МетодРасчетаОграничения,
	|	Действие,
	|	КоличествоДней,
	|	Автор,
	|	ДатаУстановки
	|из РегистрСведений.ПраваНаИзменениеДокументов
	|где
	|	( РольПользователь = Неопределено или РольПользователь в ( &МассивРолей ) или РольПользователь = &Пользователь )
	|	И
	|	( ТипДокумента = """" или ТипДокумента = &ТипДокумента )
	|	И
	|	(
	|	 (	МетодРасчетаОграничения = значение ( Перечисление.МетодРасчетаОграниченийДоступаКДокументам.Период )
	|		и
	|		&ДатаДокумента > ДатаНачала И ( &ДатаДокумента < ДатаОкончания или ДатаОкончания = датавремя ( 1, 1, 1, 0, 0, 0 ) )
	|	 )
	|	 или
	|	 ( МетодРасчетаОграничения = значение ( Перечисление.МетодРасчетаОграниченийДоступаКДокументам.КоличествоДней )
	|	   и  
	|	   Действие = значение ( Перечисление.ДействияРазрешитьЗапретить.Запретить )
	|	   и
	|	   разностьдат ( &ДатаСмены, &ТекущаяДата, день) >= КоличествоДней
	|	  )
	|	 или
	|	 ( МетодРасчетаОграничения = значение ( Перечисление.МетодРасчетаОграниченийДоступаКДокументам.КоличествоДней )
	|	   и  
	|	   Действие = значение ( Перечисление.ДействияРазрешитьЗапретить.Разрешить )
	|	   и
	|	   разностьдат ( &ДатаДокумента, &ТекущаяДата, день ) <= КоличествоДней
	|	 )
	|	) 
	|";
	запрос = Новый Запрос ( стр );
	запрос.УстановитьПараметр ( "МассивРолей", получитьМассивРолей () );
	запрос.УстановитьПараметр ( "Пользователь", ПараметрыСеанса.ТекущийПользователь );
	запрос.УстановитьПараметр ( "ТипДокумента", типДокумента );
	запрос.УстановитьПараметр ( "ДатаДокумента", ДокументОбъект.Дата );
	текущаяДата = НачалоДня ( ТекущаяДата () );
	запрос.УстановитьПараметр ( "ТекущаяДата", текущаяДата );
	таблицаПрав = запрос.Выполнить ().Выгрузить ();
	Если ( таблицаПрав.Количество () > 0 ) Тогда
		таблицаПрав.Колонки.Добавить ( "ВесПрава", Новый ОписаниеТипов ( "Число" ) );
		Для Каждого строкаПраво Из таблицаПрав Цикл
			строкаПраво.ВесПрава = 0;
			Если ( строкаПраво.РольПользователь = Неопределено ) Тогда
				// код ...	
			ИначеЕсли ( ТипЗнч ( строкаПраво.РольПользователь ) = Тип ( "ПеречислениеСсылка.Роли" ) ) Тогда 
				строкаПраво.ВесПрава = строкаПраво.ВесПрава + 10;
			ИначеЕсли ( ТипЗнч ( строкаПраво.РольПользователь ) = Тип ( "СправочникСсылка.Пользователи" ) ) Тогда 
				строкаПраво.ВесПрава = строкаПраво.ВесПрава + 100;
			Иначе
				// код ...
			КонецЕсли;
			Если ( ЗначениеЗаполнено ( строкаПраво.ТипДокумента ) ) Тогда
				строкаПраво.ВесПрава = строкаПраво.ВесПрава + 5;
			КонецЕсли;
			Если ( строкаПраво.Действие = Перечисления.ДействияРазрешитьЗапретить.Запретить ) Тогда
				строкаПраво.ВесПрава = строкаПраво.ВесПрава + 1000;
			КонецЕсли; 
		КонецЦикла;
		таблицаПрав.Сортировать ( "ВесПрава УБЫВ" );
		право = таблицаПрав [ 0 ];
		Если ( право.Действие = Перечисления.ДействияРазрешитьЗапретить.Разрешить ) Тогда
			структураПрав.Отказ = ЛОЖЬ;
		КонецЕсли;
	КонецЕсли;
	Если ( структураПрав.Отказ ) Тогда
		Сообщения.СообщениеВывести ( "НедостаточноПравДляРаботыВПериоде" );
	КонецЕсли; 
	Возврат структураПрав;
	
КонецФункции

Функция получитьМассивРолей () Экспорт 
	
	массивРолей = Новый Массив;
	количествоРолей = Перечисления.Роли.Количество ();
	Для а = 0 По ( количествоРолей - 1 ) Цикл
		роль = "" + Перечисления.Роли [ а ].Метаданные ().ЗначенияПеречисления [ а ].Имя;
		Если ( РольДоступна ( роль ) ) Тогда
			массивРолей.Добавить ( Перечисления.Роли [ а ] );  
		КонецЕсли; 
	КонецЦикла;
	Возврат массивРолей;
	
КонецФункции