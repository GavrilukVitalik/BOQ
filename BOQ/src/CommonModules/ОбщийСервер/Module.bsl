 
Функция ПустойИдентификатор () Экспорт
	
	Возврат Новый УникальныйИдентификатор ( "00000000-0000-0000-0000-000000000000" );

КонецФункции

Функция ПрочитатьXMLВТаблицу ( ТекстXML ) Экспорт
	
	Чтение = Новый ЧтениеXML;
	Чтение.УстановитьСтроку(ТекстXML);
	// Прочитаем первый узел и проверим его
	Если Не Чтение.Прочитать() Тогда
		ВызватьИсключение("Пустой XML");
	ИначеЕсли Чтение.Имя <> "Items" Тогда
		ВызватьИсключение("Ошибка в структуре XML");
	КонецЕсли;
	// Получим описание таблицы и создадим ее
	ИмяТаблицы = Чтение.ПолучитьАтрибут("Description");
	ИменаКолонок = СтрЗаменить(Чтение.ПолучитьАтрибут("Columns"), ",", Символы.ПС);
	Колонок = СтрЧислоСтрок(ИменаКолонок);
	// В случае макета "НачальноеЗаполнение" представления реквизитов получаяются на текущем
	//  языке информационной базы Имена колонок таких реквизитов содержат суффикс "#"
	ИменаКолонокXML = СтрЗаменить(ИменаКолонок, "#", ? (КодЯзыкаИнформационнойБазы() = "uk", "Ukr", ""));
	// Опциональный атрибут "ColumnNames" содержит названия колонок для таблицы значений
	ИменаКолонокТЗ = Чтение.ПолучитьАтрибут("ColumnNames");
	Если ИменаКолонокТЗ = Неопределено Тогда
		ИменаКолонокТЗ =  СтрЗаменить(ИменаКолонок, "#", "");
	Иначе
		ИменаКолонокТЗ = СтрЗаменить(ИменаКолонокТЗ, ",", Символы.ПС);
		Если Колонок <> СтрЧислоСтрок(ИменаКолонокТЗ) Тогда
			ВызватьИсключение "Ошибка в структуре XML. Различается количество элементов в атрибутах Columns и ColumnNames";
		КонецЕсли;
	КонецЕсли;
	// Опциональный атрибут "ColumnTitles" содержит представление колонок таблицы значений 
	ПредставленияКолонокТЗ = Чтение.ПолучитьАтрибут("ColumnTitles");
	Если ПредставленияКолонокТЗ = Неопределено Тогда
		ПредставленияКолонокТЗ = "";
		Для сч = 2 По Колонок Цикл
			ПредставленияКолонокТЗ = ПредставленияКолонокТЗ+Символы.ПС;
		КонецЦикла;
	Иначе
		ПредставленияКолонокТЗ = СтрЗаменить(ПредставленияКолонокТЗ, ",", Символы.ПС);
		Если Колонок <> СтрЧислоСтрок(ИменаКолонокТЗ) Тогда
			ВызватьИсключение "Ошибка в структуре XML. Различается количество элементов в атрибутах Columns и ColumnTitles";
		КонецЕсли;
	КонецЕсли;
	// Опциональный атрибут "Config" содержит настроки заполнения макета
	НастройкиЗаполненияСтрокой = Чтение.ПолучитьАтрибут("Config");
	Если НастройкиЗаполненияСтрокой = Неопределено Тогда
		НастройкиЗаполнения = Новый Структура();
	Иначе
		НастройкиЗаполнения = Новый Структура(НастройкиЗаполненияСтрокой);
	КонецЕсли;
	ТаблицаЗначений = Новый ТаблицаЗначений;
	Для Сч = 1 По Колонок Цикл
		ТаблицаЗначений.Колонки.Добавить(СтрПолучитьСтроку(ИменаКолонокТЗ, Сч), Новый ОписаниеТипов("Строка"), СтрПолучитьСтроку(ПредставленияКолонокТЗ, Сч));
	КонецЦикла;
	// Заполним значения в таблице
	Пока Чтение.Прочитать() Цикл
		Если Чтение.ТипУзла <> ТипУзлаXML.НачалоЭлемента Тогда
			Продолжить;
		ИначеЕсли Чтение.Имя <> "Item" Тогда
			ВызватьИсключение("Ошибка в структуре XML");
		КонецЕсли;
		новСтр = ТаблицаЗначений.Добавить();
		Для Сч = 1 По Колонок Цикл
			ИмяКолонки = СтрПолучитьСтроку(ИменаКолонокXML, Сч);
			новСтр[Сч-1] = Чтение.ПолучитьАтрибут(ИмяКолонки);
		КонецЦикла;
	КонецЦикла;
	// Заполним результат
	Результат = Новый Структура;
	Результат.Вставить("ИмяТаблицы", ИмяТаблицы);
	Результат.Вставить("НастройкиЗаполнения", НастройкиЗаполнения);
	Результат.Вставить("Данные", ТаблицаЗначений);
	Возврат Результат;
	
КонецФункции

Функция КодЯзыкаИнформационнойБазы () Экспорт
	
	Возврат ? ( Лев ( КодЛокализацииИнформационнойБазы (), 2 ) = "uk", "uk", "ru" );
	
КонецФункции

Процедура ВывестиВЖурналРегистрации ( Объект, ТекстСообщения, Данные  ) Экспорт 
	
	ЗаписьЖурналаРегистрации ( Объект, УровеньЖурналаРегистрации.Информация, , Данные, ТекстСообщения );
	
КонецПроцедуры

Функция ПроверитьИмяБазы () Экспорт
	
	строкаПодключения = ПолучитьСтрокуПодключения ();
	строкаWork = ВРЕГ ( "Srvr=""localhost"";Ref=""dev_boq"";" );
	Если ( строкаПодключения = строкаWork ) Тогда
		отказ = Ложь;                                                     
	Иначе
		отказ = Истина;
	КонецЕсли;
	Возврат отказ;
	
КонецФункции

Функция ПолучитьСтрокуПодключения () Экспорт
	
	с = СтрокаСоединенияИнформационнойБазы ();
	с = СтрЗаменить ( с, Символ ( 34 ), "" );
	с = ВРЕГ ( с );
	Возврат с;

КонецФункции

Функция ЭтоПодчиненныйУзелРИБ () Экспорт
	
	УстановитьПривилегированныйРежим ( Истина );
	
	Возврат ПланыОбмена.ГлавныйУзел () <> Неопределено;
	
КонецФункции

Функция ПустойУникальныйИдентификатор () Экспорт
	
	Возврат Новый УникальныйИдентификатор ( "00000000-0000-0000-0000-000000000000" );
	
КонецФункции

Функция РежимОтладки () Экспорт
	
	Возврат Ложь;
	
КонецФункции