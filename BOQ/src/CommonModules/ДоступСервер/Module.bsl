
Функция ПолныеПрава () Экспорт
	
	Возврат РольДоступна ( "ПолныеПрава" );

КонецФункции

Процедура ВключитьПользователяВГруппы ( Пользователь, ГруппаДоступа ) Экспорт
	
	Если ( ЗначениеЗаполнено ( Пользователь ) И ЗначениеЗаполнено ( ГруппаДоступа ) ) Тогда
		спрОбъект = ГруппаДоступа.ПолучитьОбъект ();
		добавитьСтроку = Истина;
		Для Каждого строкаТЧ Из спрОбъект.Пользователи Цикл
			Если ( строкаТЧ.Пользователь = Пользователь ) Тогда
				добавитьСтроку = Ложь;
			КонецЕсли;
		КонецЦикла;
		Если ( добавитьСтроку ) Тогда
			новая = спрОбъект.Пользователи.Добавить ();
			новая.Пользователь = Пользователь;
			спрОбъект.Записать ();
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры

Процедура ИсключитьПользователяИзГрупп ( Пользователь, ГруппаДоступа ) Экспорт
	
	Если ( ЗначениеЗаполнено ( Пользователь ) И ЗначениеЗаполнено ( ГруппаДоступа ) ) Тогда
		спрОбъект = ГруппаДоступа.ПолучитьОбъект ();
		Если ( спрОбъект.Пользователи.Количество () > 0 ) Тогда
			индекс = 0;
			Пока индекс < спрОбъект.Пользователи.Количество () Цикл
				строкаТЧ = спрОбъект.Пользователи [ индекс ];
				Если ( строкаТЧ.Пользователь = Пользователь ) Тогда
					спрОбъект.Пользователи.Удалить ( индекс );
				Иначе
					индекс = индекс + 1;
				КонецЕсли;
			КонецЦикла;
			спрОбъект.Записать ();
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры

Процедура ОбновитьРолиПользователей ( Пользователи ) Экспорт
	
	УстановитьПривилегированныйРежим ( Истина );
	с = "
	|выбрать различные
	|	СпрПользователи.ИдентификаторПользователяИБ как ИдентификаторПользователяИБ,
	|	СпрПрофилиРоли.Роль как Роль
	|из Справочник.ГруппыДоступа.Пользователи как ТЧПользователи
	|	внутреннее соединение Справочник.ГруппыДоступа как СпрГруппа
	|		внутреннее соединение Справочник.ПрофилиГруппДоступа.Роли как СпрПрофилиРоли
	|		по СпрПрофилиРоли.Ссылка = СпрГруппа.Профиль
	|	по СпрГруппа.Ссылка = ТЧПользователи.Ссылка
	|	внутреннее соединение Справочник.Пользователи как СпрПользователи
	|	по СпрПользователи.Ссылка = ТЧПользователи.Пользователь
	|где
	|	ТЧПользователи.Пользователь в ( &Пользователи )
	|итоги по ИдентификаторПользователяИБ 
	|";
	запрос = Новый Запрос ( с );
	запрос.УстановитьПараметр ( "Пользователи", Пользователи );
	записатьРолиПользователейИБ ( запрос.Выполнить () );
	УстановитьПривилегированныйРежим ( Ложь );
	
КонецПроцедуры

Процедура ОбновитьРолиПоПрофилю ( Профиль ) Экспорт	
	
	УстановитьПривилегированныйРежим ( Истина );
	с = "
	|выбрать Ссылка как Ссылка
	|поместить ВТГруппыДоступа
	|из Справочник.ГруппыДоступа
	|где Профиль = &Профиль
	|;
	|выбрать различные
	|	СпрПользователи.ИдентификаторПользователяИБ как ИдентификаторПользователяИБ,
	|	СпрПрофилиРоли.Роль как Роль
	|из Справочник.ГруппыДоступа.Пользователи как ТЧПользователи
	|	внутреннее соединение Справочник.ПрофилиГруппДоступа.Роли как СпрПрофилиРоли
	|	по СпрПрофилиРоли.Ссылка = &Профиль
	|	внутреннее соединение Справочник.Пользователи как СпрПользователи
	|	по СпрПользователи.Ссылка = ТЧПользователи.Пользователь
	|где
	|	ТЧПользователи.Ссылка в ( выбрать Ссылка из ВТГруппыДоступа )
	|итоги по ИдентификаторПользователяИБ 
	|";
	запрос = Новый Запрос ( с );
	запрос.УстановитьПараметр ( "Профиль", Профиль );
	записатьРолиПользователейИБ ( запрос.Выполнить () ); 
	УстановитьПривилегированныйРежим ( Ложь );	
	
КонецПроцедуры

Процедура записатьРолиПользователейИБ ( РезультатЗапроса )
	
	выборкаИД = РезультатЗапроса.Выбрать ( ОбходРезультатаЗапроса.ПоГруппировкам );
	мета = Метаданные.Роли;
	Пока ( выборкаИД.Следующий () ) Цикл
		пользовательИБ = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору ( выборкаИД.ИдентификаторПользователяИБ );
		Если ( пользовательИБ <> Неопределено ) Тогда
			пользовательИБ.Роли.Очистить ();
			выборкаРоли = выборкаИД.Выбрать ( ОбходРезультатаЗапроса.Прямой );
			Пока ( выборкаРоли.Следующий () ) Цикл
				пользовательИБ.Роли.Добавить ( мета [ выборкаРоли.Роль ] );	
			КонецЦикла;
			пользовательИБ.Записать ();
		КонецЕсли;
	КонецЦикла;	
	
КонецПроцедуры

Функция ПолучитьРолиПользователя ( Пользователь ) Экспорт
	
	УстановитьПривилегированныйРежим ( Истина );
	с = "
	|выбрать различные
	|	СпрПрофилиРоли.Роль как Роль
	|из Справочник.ГруппыДоступа.Пользователи как ТЧПользователи
	|	внутреннее соединение Справочник.ГруппыДоступа как СпрГруппы
	|		внутреннее соединение Справочник.ПрофилиГруппДоступа.Роли как СпрПрофилиРоли
	|		по СпрПрофилиРоли.Ссылка = СпрГруппы.Профиль
	|	по ТЧПользователи.Ссылка = СпрГруппы.Ссылка
	|где
	|	ТЧПользователи.Пользователь = &Пользователь 
	|";
	запрос = Новый Запрос ( с );
	запрос.УстановитьПараметр ( "Пользователь", Пользователь );
	выборка = запрос.Выполнить ().Выбрать ();
	м = Новый Массив ();
	Пока ( выборка.Следующий () ) Цикл
		м.Добавить ( выборка.Роль );
	КонецЦикла;
	УстановитьПривилегированныйРежим ( Ложь );
	Возврат м;

КонецФункции