
&НаКлиенте 
Перем ЗакрытиеРазрешено;

&НаСервере
Процедура ПриСозданииНаСервере ( Отказ, СтандартнаяОбработка )
	
	Если ( НЕ ЗначениеЗаполнено ( Параметры.Объект ) ) Тогда
		Возврат;
	КонецЕсли;
	заполнитьРеквизиты ();
	установитьВидимостьКоманд ();
	обновитьСписок ();
	
КонецПроцедуры

&НаСервере
Процедура заполнитьРеквизиты ()
	
	Слеш = РаботаСФайлами.РазделительОС ();
	СлешВеб = РаботаСФайлами.РазделительВеб ();
	ОбъектВладелец = Параметры.Объект;
	Папка = РегистрыСведений.Файлы.ПолучитьПапкуХранения ( ОбъектВладелец );
	МасштабКартинки = 100;
	Список.Параметры.УстановитьЗначениеПараметра ( "ОбъектВладелец", ОбъектВладелец );
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии ( Отказ )
	
	ПоказыватьИзображение = Истина;
	ОтображатьИзменениеМасштаба = Ложь;
	обновитьВидимость ();
	установитьВидимостьМасштаба ();
	обновитьСписок ();
	
КонецПроцедуры

&НаСервере
Процедура обновитьСписок ()
	
	Элементы.Список.Обновить ();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки ( Элемент )
	
	текущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ( текущиеДанные <> Неопределено И ПоказыватьИзображение ) Тогда
		ИмяФайла = Папка + текущиеДанные.ИмяФайла + "." + текущиеДанные.Расширение;
		// ИмяФайла = "file:\\" + Папка + текущиеДанные.ИмяФайла + "." + текущиеДанные.Расширение;
		сформироватьHTML ();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере 
Процедура сформироватьHTML ()
	
	Если ( ИмяФайла = "" ) Тогда
		HTMLСтрока = "";
	Иначе
		HTMLСтрока = Обработки.ПросмотрФайлов.СгенерироватьHTML ( ИмяФайла );
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьФайл ( Команда )
	
	выбратьФайлы ();
	
КонецПроцедуры

&НаКлиенте
Процедура выбратьФайлы ()
	
	п = Новый Структура ();
	п.Вставить ( "МножественныйВыбор", Ложь );
	п.Вставить ( "Оповещение", Новый ОписаниеОповещения ( "ПослеВыбораФайлов", ЭтотОбъект ) );
	РаботаСФайлами.ВыбратьФайлы ( п );
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораФайлов ( Данные, Парамы ) Экспорт
	
	Если ( Данные <> Неопределено ) Тогда
		Если ( Данные.Файлы.Количество () > 0 ) Тогда
			файл = Данные.Файлы [ 0 ];
			присоединитьФайл ( ОбъектВладелец, файл );
			обновитьСписок ();
			//Ключ = Новый РегистрСведенийКлючЗаписи.Файлы ( Новый Структура("Объект, ИмяФайла, Расширение", Расширение, ЗначениеИзмерения2));
			//Элементы.Список.ТекущаяСтрока = Ключ;	
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура присоединитьФайл ( ОбъектВладелец, Файлы )
	
	РегистрыСведений.Файлы.ПрисоединитьФайл ( ОбъектВладелец, Файлы ); 
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьФайл ( Команда )
	 
	данные = Элементы.Список.ТекущиеДанные;
	Если ( данные = Неопределено ) Тогда
		Возврат;
	КонецЕсли;
	п = Новый Структура ();
	п.Вставить ( "Имя", данные.ИмяФайла );
	п.Вставить ( "Расширение", данные.Расширение );
	п.Вставить ( "ИмяФайла", данные.ИмяФайла + "." + данные.Расширение );
	п.Вставить ( "Адрес", поместитьФайлВХранилище ( Папка + данные.ИмяФайла + "." + данные.Расширение ) ); 
	РаботаСФайлами.СохранитьФайлы ( п );
	
КонецПроцедуры

&НаСервереБезКонтекста 
Функция поместитьФайлВХранилище ( ПолноеИмяФайла )
	
	данные = Новый ДвоичныеДанные ( ПолноеИмяФайла );
	Возврат ПоместитьВоВременноеХранилище ( данные );

КонецФункции

&НаКлиенте
Процедура УдалитьФайл ( Команда )
	
	данные = Элементы.Список.ТекущиеДанные;
	Если ( данные = Неопределено ) Тогда
		Возврат;
	КонецЕсли;
	п = Новый Структура ();
	п.Вставить ( "ИмяФайла", данные.ИмяФайла + "." + данные.Расширение ); 
	Сообщения.ВопросПоказать ( "ВопросУдалитьФайл", п, "ВопросУдалитьФайл", ЭтотОбъект ); 
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросУдалитьФайл ( Результат, Парам ) Экспорт 	
	
	Если ( Результат <> КодВозвратаДиалога.Да ) Тогда
		Возврат;
	КонецЕсли;
	данные = Элементы.Список.ТекущиеДанные;
	путьКФайлу = Папка + данные.ИмяФайла + "." + данные.Расширение;
	ИмяФайла = "";
	удалитьПрикрепленныйФайл ( путьКФайлу );
	удалитьЗапись ( ОбъектВладелец, данные.ИмяФайла, данные.Расширение );
	обновитьСписок ();
	Сообщения.Оповещение ( "ФайлУдален", , , , БиблиотекаКартинок.Файлы48 ); 
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура удалитьПрикрепленныйФайл ( Путь )
	
	УдалитьФайлы ( Путь );
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура удалитьЗапись ( Объект, ИмяФайла, Расширение )
	
	РегистрыСведений.Файлы.УдалитьЗапись ( Объект, ИмяФайла, Расширение );
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьФайл ( Команда )
	
	ПоказыватьИзображение = НЕ ПоказыватьИзображение;
	обновитьВидимость ();
	
КонецПроцедуры

&НаКлиенте
Процедура обновитьВидимость ( Элемент = Неопределено )
	
	Если ( Элемент = Неопределено ИЛИ Элемент.Имя = "ПоказыватьФайл" ) Тогда
		Элементы.ГруппаHTML.Видимость = ПоказыватьИзображение;
		Элементы.ПоказыватьИзображение.Пометка = ПоказыватьИзображение;
	КонецЕсли; 
	
КонецПроцедуры 

&НаКлиенте
Процедура МасштабПриИзменении ( Элемент )
	
	приИзмененииМасштаба ();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПеретаскивание ( Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле )
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПроверкаПеретаскивания ( Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле )
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры 

&НаСервере
Процедура установитьВидимостьКоманд ()
	
	изменение = ПравоДоступа ( "Редактирование", Метаданные.РегистрыСведений.Файлы );
	Элементы.ДобавитьФайл.Доступность = изменение;
	Элементы.УдалитьФайл.Доступность = изменение;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьМасштаб ( Команда )
	
	ОтображатьИзменениеМасштаба = НЕ ОтображатьИзменениеМасштаба;
	Элементы.ПоказыватьМасштаб.Пометка = ОтображатьИзменениеМасштаба;
	установитьВидимостьМасштаба ();	
	
КонецПроцедуры

&НаКлиенте
Процедура установитьВидимостьМасштаба ()
	
	Элементы.ГруппаМасштаб.Видимость = ОтображатьИзменениеМасштаба;
	Элементы.ПоказыватьМасштаб.Пометка = ОтображатьИзменениеМасштаба;
	
КонецПроцедуры 

&НаКлиенте
Процедура ДекорацияМасштабНажатие ( Элемент )
	
	МасштабКартинки = 100;
	приИзмененииМасштаба ();
	
КонецПроцедуры

&НаКлиенте
Процедура приИзмененииМасштаба ()
	
	Элементы.МасштабКартинки.Заголовок = "Масштаб " + МасштабКартинки + " %";
	сформироватьHTML ();
	
КонецПроцедуры

&НаКлиенте
Процедура HTMLСтрокаПриНажатии ( Элемент, ДанныеСобытия, СтандартнаяОбработка )
	
	Если ( ДанныеСобытия.Href = Неопределено ) Тогда
		Возврат;
	КонецЕсли;
	СтандартнаяОбработка = Ложь;
	текущиеДанные = Элементы.НаборЗаписей.ТекущиеДанные;
	имяФайла = Папка + текущиеДанные.ИмяФайла + текущиеДанные.Расширение;
	оповещение = Новый ОписаниеОповещения ( "ПослеЗапускаПриложения", ЭтотОбъект );	
	НачатьЗапускПриложения ( оповещение, ИмяФайла );
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗапускаПриложения ( Ответ, Парамы ) Экспорт
	
	Если ( Ответ = Неопределено ) Тогда
		// код ...
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьHTML ( Команда )
	
	Элементы.HTMLСтрока.Документ.execCommand ( "Print" ); 
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломДобавления ( Элемент, Отказ, Копирование, Родитель, Группа, Параметр )
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередУдалением ( Элемент, Отказ )
	
	Отказ = Истина;
	
КонецПроцедуры
