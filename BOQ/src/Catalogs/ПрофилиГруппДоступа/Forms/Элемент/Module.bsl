
&НаСервере
Процедура ПриСозданииНаСервере ( Отказ, СтандартнаяОбработка )
	
	ПоказатьПодсистемы = Истина;
	ПоказатьТолькоВыбранные = Истина;
	заполнитьДеревоРоли ();
	добавитьОформление ();
	установитьОформление ();
	
КонецПроцедуры

&НаСервере
Процедура заполнитьДеревоРоли ()
	
	ветви = ДеревоРоли.ПолучитьЭлементы ();
	ветви.Очистить ();
	мРоли = получитьВыбранныеРоли ();
	заполнитьДеревоПодсистемы ( ветви, Метаданные.Подсистемы, мРоли );
	
КонецПроцедуры

&НаСервере
Процедура заполнитьДеревоПодсистемы ( Ветви, Подсистемы, ВыбранныеРоли )
	
	Для Каждого подсистема Из Подсистемы Цикл
		ветвь = Ветви.Добавить ();
		ветвь.Пометка = Ложь;
		ветвь.Синоним = ? ( подсистема.Синоним = "", подсистема.Имя, подсистема.Синоним );
		ветвь.НомерКартинки = 5; 
		ветвь.Имя = подсистема.Имя;
		ветвь.ЭтоРоль = Ложь;
		заполнитьДеревоПодсистемы ( ветвь.ПолучитьЭлементы (), подсистема.Подсистемы, ВыбранныеРоли );
		Для каждого роль Из Метаданные.Роли Цикл
			Если подсистема.Состав.Содержит ( Роль ) Тогда
				ветвьРоль = ветвь.ПолучитьЭлементы ().Добавить ();
				ветвьРоль.Пометка = ( ВыбранныеРоли.Найти ( роль.Имя ) <> Неопределено );
				ветвьРоль.Синоним = ? ( роль.Синоним = "", роль.Имя, роль.Синоним );
				ветвьРоль.НомерКартинки = 6; 
				ветвьРоль.Имя = роль.Имя;
				ветвьРоль.ЭтоРоль = Истина;
				Если ( ветвьРоль.Пометка ) Тогда
					заполнитьПометкуРодителя ( ветвь, Истина );
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура добавитьОформление ()
	
	УсловноеОформление.Элементы.Очистить ();
	добавитьОформлениеПометка ();
	добавитьОформлениеЭтоРоль ();
	
КонецПроцедуры

&НаСервере
Процедура добавитьОформлениеПометка ()
	
	уо = УсловноеОформление.Элементы.Добавить ();
	уо.Оформление.УстановитьЗначениеПараметра ( "Видимость", Ложь );
	отбор = уо.Отбор.Элементы.Добавить( Тип ( "ЭлементОтбораКомпоновкиДанных" ) );
	отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных ( "ДеревоРоли.Пометка" );
	отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;   
	отбор.ПравоеЗначение = Ложь;   
	отбор.Использование = Истина;
	полеУО = уо.Поля.Элементы.Добавить ();     
	полеУО.Поле = Новый ПолеКомпоновкиДанных ( "ДеревоРолиПометка" );
	полеУО.Использование = Истина;
	полеУО = уо.Поля.Элементы.Добавить ();     
	полеУО.Поле = Новый ПолеКомпоновкиДанных ( "ДеревоРолиСиноним" );
	полеУО.Использование = Истина;
	
КонецПроцедуры

&НаСервере
Процедура добавитьОформлениеЭтоРоль ()
	
	уо = УсловноеОформление.Элементы.Добавить ();
	уо.Оформление.УстановитьЗначениеПараметра ( "Видимость", Ложь );
	отбор = уо.Отбор.Элементы.Добавить( Тип ( "ЭлементОтбораКомпоновкиДанных" ) );
	отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных ( "ДеревоРоли.ЭтоРоль" );
	отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;   
	отбор.ПравоеЗначение = Ложь;   
	отбор.Использование = Истина;
	полеУО = уо.Поля.Элементы.Добавить ();     
	полеУО.Поле = Новый ПолеКомпоновкиДанных ( "ДеревоРолиПометка" );
	полеУО.Использование = Истина;
	полеУО = уо.Поля.Элементы.Добавить ();     
	полеУО.Поле = Новый ПолеКомпоновкиДанных ( "ДеревоРолиСиноним" );
	полеУО.Использование = Истина;
	
КонецПроцедуры

&НаСервере
Процедура установитьОформление ()
	
	УсловноеОформление.Элементы [ 0 ].Использование = ПоказатьТолькоВыбранные;
	УсловноеОформление.Элементы [ 1 ].Использование = НЕ ПоказатьПодсистемы;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии ( Отказ )
	
	развернутьДеревоРоли ();
	
КонецПроцедуры

&НаКлиенте
Процедура развернутьДеревоРоли ()
	
	Для каждого ветвь Из ДеревоРоли.ПолучитьЭлементы () Цикл
        Элементы.ДеревоРоли.Развернуть ( ветвь.ПолучитьИдентификатор (), Истина );
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура заполнитьПометкуРодителя ( Ветвь, Значение )
	
	Ветвь.Пометка = Значение;
	родитель = Ветвь.ПолучитьРодителя ();
	Если ( родитель <> Неопределено ) Тогда
		заполнитьПометкуРодителя ( родитель, Значение );
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция получитьВыбранныеРоли ()
	
	м = Новый Массив ();
	Для Каждого строкаТЧ Из Объект.Роли Цикл
		м.Добавить ( строкаТЧ.Роль );
	КонецЦикла;
	Возврат м;

КонецФункции

&НаКлиенте
Процедура ОтобразитьПодсистемы ( Команда )
	
	ПоказатьПодсистемы = НЕ ПоказатьПодсистемы;
	Элементы.ПоказатьПодсистемы.Пометка = ПоказатьПодсистемы;
	установитьОформление ();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтобразитьТолькоВыбранные ( Команда )
	
	ПоказатьТолькоВыбранные = НЕ ПоказатьТолькоВыбранные;
	Элементы.ПоказатьТолькоВыбранные.Пометка = ПоказатьТолькоВыбранные;
	установитьОформление ();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки ( Команда )
	
	Объект.Роли.Очистить ();
	заполнитьФлаг ( ДеревоРоли.ПолучитьЭлементы (), Истина );
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки ( Команда )
	
	Объект.Роли.Очистить ();
	заполнитьФлаг ( ДеревоРоли.ПолучитьЭлементы (), Ложь );
	
КонецПроцедуры

&НаКлиенте
Процедура заполнитьФлаг ( Ветви, Пометка )
	
	Для Каждого ветвь Из Ветви Цикл
		ветвь.Пометка = Пометка;
		заполнитьФлаг ( ветвь.ПолучитьЭлементы (), Пометка );
	КонецЦикла;
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоРолиПометкаПриИзменении ( Элемент )
	
	данные = Элементы.ДеревоРоли.ТекущиеДанные;
	Если ( данные <> Неопределено ) Тогда
		ид = Элементы.ДеревоРоли.ТекущаяСтрока;
		ветвь = ДеревоРоли.НайтиПоИдентификатору ( ид );
		заполнитьФлагУПодчиненных ( ветвь.ПолучитьЭлементы (), данные.Пометка );
		заполнитьПометкуВерхней ( ветвь, данные.Пометка );
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура заполнитьФлагУПодчиненных ( Ветви, Значение )
	
	Для Каждого ветвь Из Ветви Цикл
		ветвь.Пометка = Значение;
		заполнитьФлагУПодчиненных ( ветвь.ПолучитьЭлементы (), Значение ); 
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура заполнитьПометкуВерхней ( Ветвь, Значение )
	
	Ветвь.Пометка = Значение;
	родитель = Ветвь.ПолучитьРодителя ();
	Если ( родитель <> Неопределено ) Тогда
		заполнитьПометкуВерхней ( родитель, Значение );
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью ( Отказ, ПараметрыЗаписи )
	
	Объект.Роли.Очистить ();
	мРоли = Новый Массив ();
	заполнитьРоли ( ДеревоРоли.ПолучитьЭлементы (), мРоли );
	Для Каждого роль Из мРоли Цикл
		новая = Объект.Роли.Добавить ();
		новая.Роль = роль;		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура заполнитьРоли ( Ветви, Роли )
	
	Для Каждого ветвь Из Ветви Цикл
		Если ( ветвь.ЭтоРоль И ветвь.Пометка ) Тогда
			Если ( Роли.Найти ( ветвь.Имя ) = Неопределено ) Тогда
				Роли.Добавить ( ветвь.Имя );
			КонецЕсли;
		КонецЕсли;	
		заполнитьРоли ( ветвь.ПолучитьЭлементы (), Роли );
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи ( ПараметрыЗаписи )
	
	Оповестить ( "ЗаписьПрофилиГруппДоступа", Новый Структура (), Объект.Ссылка );
	
КонецПроцедуры