			   
Перем СоставПользователей;

Процедура ПередЗаписью ( Отказ )
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	убратьДубли ();
	заполнитьСоставПользователей ();
	
КонецПроцедуры

Процедура ПриЗаписи ( Отказ )
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	обновитьРолиПользователей ();
	ДоступСервер.ОбновитьРолиПользователей ( СоставПользователей );
	
КонецПроцедуры

Процедура заполнитьСоставПользователей ()
	
	СоставПользователей = Новый Массив ();
	Если ( НЕ ЭтоНовый () ) Тогда
		с = "
		|выбрать различные Пользователь как Пользователь
		|из Справочник.ГруппыДоступа.Пользователи
		|где Ссылка = &Ссылка
		|";
		запрос = Новый Запрос ( с );
		запрос.УстановитьПараметр ( "Ссылка", Ссылка );
		результат = запрос.Выполнить ();
		выборка = результат.Выбрать ();
		Пока ( выборка.Следующий () ) Цикл
			СоставПользователей.Добавить ( выборка.Пользователь );	
		КонецЦикла; 
	КонецЕсли;
	
КонецПроцедуры

Процедура обновитьРолиПользователей ()
	
	Для Каждого строкаТЧ Из Пользователи Цикл
		Если ( СоставПользователей.Найти ( строкаТЧ.Пользователь ) = Неопределено ) Тогда
			СоставПользователей.Добавить ( строкаТЧ.Пользователь );
		КонецЕсли;
	КонецЦикла;
	ДоступСервер.ОбновитьРолиПользователей ( СоставПользователей );	
	
КонецПроцедуры

Процедура убратьДубли ()
	
	тз = Пользователи.Выгрузить ();
	тз.Свернуть ( "Пользователь" );
	Пользователи.Загрузить ( тз );
	
КонецПроцедуры

СоставПользователей = Новый Массив ();