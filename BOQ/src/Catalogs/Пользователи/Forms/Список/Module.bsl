
&НаСервере
Процедура ПриСозданииНаСервере ( Отказ, СтандартнаяОбработка )
	
	ИспользоватьГруппы = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппыПользователейПриАктивизацииСтроки ( Элемент )
	
	ПодключитьОбработчикОжидания ( "ГруппыПользователейПослеАктивизацииСтроки", 0.1, Истина );
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппыПользователейВыборЗначения ( Элемент, Значение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОповеститьОВыборе ( Значение );
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппыПользователейПередНачаломДобавления ( Элемент, Отказ, Копирование, Родитель, Группа, Параметр )
	
	Если НЕ Копирование Тогда
		Отказ = Истина;
		п = Новый Структура ();
		Если ЗначениеЗаполнено ( Элементы.ГруппыПользователей.ТекущаяСтрока ) Тогда
			п.Вставить("ЗначенияЗаполнения", Новый Структура ( "Родитель", Элементы.ГруппыПользователей.ТекущаяСтрока ) );
		КонецЕсли;
		ОткрытьФорму ( "Справочник.ГруппыПользователей.Форма.Элемент", п, Элементы.ГруппыПользователей );
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппыПользователейПослеАктивизацииСтроки ()
	
	обновитьПриИзмененииГруппы ();
	
КонецПроцедуры

&НаКлиенте
Процедура обновитьПриИзмененииГруппы ()
	
	Список.Параметры.УстановитьЗначениеПараметра ( "ГруппаПользователей", Элементы.ГруппыПользователей.ТекущаяСтрока ); 
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения ( ИмяСобытия, Параметр, Источник )
	
	Если ВРег ( ИмяСобытия ) = ВРег ( "ЗаписьГруппыПользователей" )
	   И Источник = Элементы.ГруппыПользователей.ТекущаяСтрока Тогда
		Элементы.Список.Обновить ();
	КонецЕсли;
	
КонецПроцедуры