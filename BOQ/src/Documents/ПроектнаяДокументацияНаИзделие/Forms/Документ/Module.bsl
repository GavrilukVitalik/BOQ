
&НаСервере
Процедура ПриСозданииНаСервере ( Отказ, СтандартнаяОбработка )
	
	Если ( Объект.Ссылка.Пустая () ) Тогда
		начальноеЗаполнение ();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура начальноеЗаполнение ()
	
	Объект.Автор = ПараметрыСеанса.ТекущийПользователь;
	ОбработкаМоделиВыполняется = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии ( Отказ )
	
	установитьДоступность ();
	
КонецПроцедуры

&НаКлиенте
Процедура установитьДоступность ()

	Элементы.ЗапуститьОбработку.Доступность = Не ОбработкаМоделиВыполняется;
	Элементы.ЗапуститьОбработку.Пометка = ОбработкаМоделиВыполняется;
	Элементы.ПрерватьОбработку.Доступность = ОбработкаМоделиВыполняется;
	
КонецПроцедуры

#Область Команды

&НаКлиенте
Процедура ЗагрузитьФайлRVT ( Команда )
	
	Если ( Объект.Ссылка.Пустая () ) Тогда
		Сообщения.ПредупреждениеПоказать ( "ОбъектНеЗаписан" );
	Иначе
		Если ( Объект.ФайлRVT = "" ) Тогда
			выборФайлаЗагрузкиRVT ();
		Иначе
			Сообщения.ВопросПоказать ( "УдалитьФайлПроектнойДокументации", , "ВопросУдалитьRVT", ЭтотОбъект );
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросУдалитьRVT ( Ответ, Парамы ) Экспорт
	
	Если ( Ответ = КодВозвратаДиалога.Да ) Тогда
		удалитьПрикрепленныйФайл ( Объект.Ссылка, Объект.ФайлRVT );
		расширение = РаботаСФайлами.ПолучитьРасширениеФайла ( Объект.ФайлRVT );
		имяФайла = СтрЗаменить ( Объект.ФайлRVT, расширение, "" );
		удалитьЗапись ( Объект.Ссылка, имяФайла, расширение );
		выборФайлаЗагрузкиRVT ();
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура удалитьПрикрепленныйФайл ( Объект, ИмяФайла )
	
	папка = РегистрыСведений.Файлы.ПолучитьПапкуХранения ( Объект );
	путь = папка + ИмяФайла;
	УдалитьФайлы ( путь );
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура удалитьЗапись ( Объект, ИмяФайла, Расширение )
	
	РегистрыСведений.Файлы.УдалитьЗапись ( Объект, ИмяФайла, Расширение );
	
КонецПроцедуры	

&НаКлиенте
Процедура выборФайлаЗагрузкиRVT ()
	
	п = Новый Структура ();
	п.Вставить ( "Фильтр", Сообщения.ТекстПоИД ( "ФильтрRVT" ) );
	п.Вставить ( "МножественныйВыбор", Ложь );
	п.Вставить ( "Оповещение", Новый ОписаниеОповещения ( "ПослеЗагрузкиФайлаПроектнойДокументации", ЭтотОбъект ) );
	РаботаСФайлами.ВыбратьФайлы ( п );	
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗагрузкиФайлаПроектнойДокументации ( Данные, Парамы ) Экспорт
	
	Если ( Данные <> Неопределено ) Тогда
		Если ( Данные.Файлы.Количество () > 0 ) Тогда
			файл = Данные.Файлы [ 0 ];
			присоединитьФайл ( Объект.Ссылка, файл );
			Объект.ФайлRVT = файл.Имя;
			Объект.НаименованиеДокументации = СтрЗаменить ( файл.Имя, файл.Расширение, "" );
			Модифицированность = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура присоединитьФайл ( Объект, Файлы )
	
	РегистрыСведений.Файлы.ПрисоединитьФайл ( Объект, Файлы ); 
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьФайлRVT ( Команда )

	Если ( Объект.ФайлRVT = "" ) Тогда
		// код ...
	Иначе
		выборФайлаДляСохраненияRVT ();		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура выборФайлаДляСохраненияRVT ()
	
	данные = РаботаСФайлами.ПолучитьИмяФайлаРасширение ( Объект.ФайлRVT );
	адрес = получитьПрикрепленныйФайл ( Объект.Ссылка, данные.Имя, данные.Расширение );
	Если ( адрес = Неопределено ) Тогда
		Возврат;
	КонецЕсли;
	п = Новый Структура ();
	п.Вставить ( "Фильтр", Сообщения.ТекстПоИД ( "ФильтрRVT" ) );
	п.Вставить ( "Адрес", адрес );
	п.Вставить ( "МножественныйВыбор", Ложь );
	п.Вставить ( "ИмяФайла", Объект.ФайлRVT );
	п.Вставить ( "Имя", данные.Имя );
	п.Вставить ( "Расширение", данные.Расширение );
	п.Вставить ( "Оповещение", Новый ОписаниеОповещения ( "ПослеСохраненияRVT", ЭтотОбъект ) );
	РаботаСФайлами.СохранитьФайлы ( п );	
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеСохраненияRVT ( Данные, Парамы ) Экспорт
	
	Если ( Данные <> Неопределено ) Тогда
		// код ...
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция получитьПрикрепленныйФайл ( Объект, Имя, Расширение )
	
	Возврат РегистрыСведений.Файлы.ПоместитьФайлВХранилище ( Объект, Имя, Расширение );

КонецФункции

&НаКлиенте
Процедура СохранитьФайлSVF2 ( Команда )

	Если ( Объект.ФайлSVF = "" ) Тогда
		// код ...
	Иначе
		выборФайлаSVF ();		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура выборФайлаSVF ()
	
	данные = РаботаСФайлами.ПолучитьИмяФайлаРасширение ( Объект.ФайлSVF );
	адрес = получитьПрикрепленныйФайл ( Объект.Ссылка, данные.Имя, данные.Расширение );
	Если ( адрес = Неопределено ) Тогда
		Возврат;
	КонецЕсли;
	п = Новый Структура ();
	п.Вставить ( "Фильтр", Сообщения.ТекстПоИД ( "ФильтрSVF" ) );
	п.Вставить ( "Адрес", адрес );
	п.Вставить ( "МножественныйВыбор", Ложь );
	п.Вставить ( "ИмяФайла", Объект.ФайлSVF );
	п.Вставить ( "Имя", данные.Имя );
	п.Вставить ( "Расширение", данные.Расширение );
	п.Вставить ( "Оповещение", Новый ОписаниеОповещения ( "ПослеСохраненияSVF", ЭтотОбъект ) );
	РаботаСФайлами.СохранитьФайлы ( п );	
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеСохраненияSVF ( Данные, Парамы ) Экспорт
	
	Если ( Данные <> Неопределено ) Тогда
		// код ...
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапуститьОбработку ( Команда )

	Сообщения.ВопросПоказать ( "ЗапуститьОбработкуМодели", , "ВопросЗапуститьОбработку", ЭтотОбъект );
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросЗапуститьОбработку ( Ответ, Парамы ) Экспорт
	
	Если ( Ответ = КодВозвратаДиалога.Да ) Тогда
		ОбработкаМоделиВыполняется = Истина;
		установитьДоступность ();
		Сообщить ( "ТЕСТ", СтатусСообщения.Обычное );  
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПрерватьОбработку ( Команда )

	Сообщения.ВопросПоказать ( "ПрерватьОбработкуМодели", , "ВопросПрерватьОбработку", ЭтотОбъект );	

КонецПроцедуры

&НаКлиенте
Процедура ВопросПрерватьОбработку ( Ответ, Парамы ) Экспорт
	
	Если ( Ответ = КодВозвратаДиалога.Да ) Тогда
		ОбработкаМоделиВыполняется = Ложь;
		установитьДоступность ();
		Сообщить ( "ТЕСТ", СтатусСообщения.Обычное );  
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьРезультатыОбработки ( Команда )

	Сообщения.ВопросПоказать ( "УдалитьРезультатыОбработкиМодели", , "ВопросУдалитьРезультатыОбработки", ЭтотОбъект );

КонецПроцедуры

&НаКлиенте
Процедура ВопросУдалитьРезультатыОбработки ( Ответ, Парамы ) Экспорт
	
	Если ( Ответ = КодВозвратаДиалога.Да ) Тогда
		Сообщить ( "ТЕСТ", СтатусСообщения.Обычное );  
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти