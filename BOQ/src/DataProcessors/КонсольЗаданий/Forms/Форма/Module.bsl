
&НаКлиенте
Процедура ПриОткрытии ( Отказ )
	
	Попытка
		Если АвтообновлениеСпискаРегламентныхЗаданий = Истина Тогда
			ПодключитьОбработчикОжидания("ОбработчикАвтообновленияРегламентныхЗаданий", ПериодАвтообновленияСпискаРегламентныхЗаданий);	
		КонецЕсли;		
		Если АвтообновлениеСпискаФоновыхЗаданий = Истина Тогда
			ПодключитьОбработчикОжидания("ОбработчикАвтообновленияФоновыхЗаданий", ПериодАвтообновленияСпискаФоновыхЗаданий);	
		КонецЕсли;		
		ОбновитьСписокРегламентныхЗаданий ();
		ОбновитьСписокФоновыхЗаданий ();
	Исключение	
		ПоказатьИнформациюОбОшибке(ИнформацияОбОшибке());
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСписокРегламентныхЗаданий ()
	
	Перем ТекущийИдентификатор;
	ТекущаяСтрока = Элементы.СписокРегламентныхЗаданий.ТекущаяСтрока;
	Если ТекущаяСтрока <> Неопределено Тогда
		ТекСтрока = СписокРегламентныхЗаданий.НайтиПоИдентификатору(ТекущаяСтрока);
		ТекущийИдентификатор = ТекСтрока.Идентификатор;
	КонецЕсли;
	Идентификаторы = Новый Массив;
	ВыделенныеСтроки = Элементы.СписокРегламентныхЗаданий.ВыделенныеСтроки;
	Для Каждого ВыделеннаяСтрока из ВыделенныеСтроки Цикл
		ТекСтрока = СписокРегламентныхЗаданий.НайтиПоИдентификатору(ВыделеннаяСтрока);
		Идентификаторы.Добавить(ТекСтрока.Идентификатор);
	КонецЦикла;
	СписокРегламентныхЗаданий.Очистить();
	Отбор = Неопределено;
	Если ОтборРегламентныхЗаданийВключен = Истина Тогда
		Отбор = ОтборРегламентныхЗаданий;
	КонецЕсли;
	Попытка
		Регламентные = РегламентныеЗадания.ПолучитьРегламентныеЗадания(Отбор);
	Исключение
		//Элементы.СписокРегламентныхЗаданий.Доступность = Ложь;
		Возврат;
	КонецПопытки;
	//Элементы.СписокРегламентныхЗаданий.Доступность = Истина;
	Для Каждого Регламентное из Регламентные Цикл
		НоваяСтрока = СписокРегламентныхЗаданий.Добавить();
		НоваяСтрока.Метаданные = Регламентное.Метаданные.Представление();
		НоваяСтрока.Наименование = Регламентное.Наименование;
		НоваяСтрока.Ключ = Регламентное.Ключ;
		НоваяСтрока.Расписание = Регламентное.Расписание;
		НоваяСтрока.Пользователь = Регламентное.ИмяПользователя;
		НоваяСтрока.Предопределенное = Регламентное.Предопределенное;
		НоваяСтрока.Использование = Регламентное.Использование;
		НоваяСтрока.Идентификатор = Регламентное.УникальныйИдентификатор;
		Попытка
			ПоследнееЗадание = Регламентное.ПоследнееЗадание;
		Исключение
			ПоследнееЗадание = Неопределено;
		КонецПопытки;
		Если ПоследнееЗадание <> Неопределено Тогда
			НоваяСтрока.Выполнялось = ПоследнееЗадание.Начало;
			НоваяСтрока.Состояние = ПоследнееЗадание.Состояние;
		КонецЕсли;
	КонецЦикла;
	Если ТекущийИдентификатор <> Неопределено Тогда
		Строки = СписокРегламентныхЗаданий.НайтиСтроки(Новый Структура("Идентификатор", ТекущийИдентификатор));
		Если Строки.Количество() > 0 Тогда
			Элементы.СписокРегламентныхЗаданий.ТекущаяСтрока = Строки[0].ПолучитьИдентификатор();
		КонецЕсли;
	КонецЕсли;
	Если Идентификаторы.Количество() > 0 Тогда
		ВыделенныеСтроки.Очистить();
	КонецЕсли;
	Для Каждого Идентификатор из Идентификаторы Цикл
		Строки = СписокРегламентныхЗаданий.НайтиСтроки(Новый Структура("Идентификатор", Идентификатор));
		Если Строки.Количество() > 0 Тогда
			ВыделенныеСтроки.Добавить(Строки[0].ПолучитьИдентификатор());
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСписокФоновыхЗаданий ()
	
	Перем ТекущийИдентификатор;
	ТекущаяСтрока = Элементы.СписокФоновыхЗаданий.ТекущаяСтрока;
	Если ТекущаяСтрока <> Неопределено Тогда
		ТекСтрока = СписокФоновыхЗаданий.НайтиПоИдентификатору(ТекущаяСтрока);
		ТекущийИдентификатор = ТекСтрока.Идентификатор;
	КонецЕсли;
	Идентификаторы = Новый Массив;
	ВыделенныеСтроки = Элементы.СписокФоновыхЗаданий.ВыделенныеСтроки;
	Для Каждого ВыделеннаяСтрока из ВыделенныеСтроки Цикл
		ТекСтрока = СписокФоновыхЗаданий.НайтиПоИдентификатору(ВыделеннаяСтрока);
		Идентификаторы.Добавить(ТекСтрока.Идентификатор);
	КонецЦикла;
	СписокФоновыхЗаданий.Очистить();
	Отбор = Неопределено;
	Если ОтборФоновыхЗаданийВключен = Истина Тогда
		Отбор = ОтборФоновыхЗаданий;
	КонецЕсли;
	Попытка
		Фоновые = ФоновыеЗадания.ПолучитьФоновыеЗадания(Отбор);
	Исключение
		//Элементы.СписокФоновыхЗаданий.Доступность = Ложь;
		Возврат;
	КонецПопытки;
	//Элементы.СписокФоновыхЗаданий.Доступность = Истина;
	Для Каждого Фоновое из Фоновые Цикл
		НоваяСтрока = СписокФоновыхЗаданий.Добавить();
		РегламентноеЗадание = Фоновое.РегламентноеЗадание;
		Если РегламентноеЗадание <> Неопределено Тогда
			Строка = РегламентноеЗадание.Метаданные.Представление();
			Если РегламентноеЗадание.Наименование <> "" Тогда
				Строка = Строка + ":" +	РегламентноеЗадание.Наименование;
			КонецЕсли;
			НоваяСтрока.Регламентное = Строка;
		КонецЕсли;
		НоваяСтрока.Наименование = Фоновое.Наименование;
		НоваяСтрока.Ключ = Фоновое.Ключ;
		НоваяСтрока.Метод = Фоновое.ИмяМетода;
		НоваяСтрока.Состояние = Фоновое.Состояние;
		НоваяСтрока.Начало = Фоновое.Начало;
		НоваяСтрока.Конец = Фоновое.Конец;
		НоваяСтрока.Сервер = Фоновое.Расположение;
		Если Фоновое.ИнформацияОбОшибке <> Неопределено Тогда
			НоваяСтрока.Ошибки = Фоновое.ИнформацияОбОшибке.Описание;
		КонецЕсли;
		НоваяСтрока.Идентификатор = Фоновое.УникальныйИдентификатор;
		НоваяСтрока.СостояниеЗадания = Фоновое.Состояние;
	КонецЦикла;
	Если ТекущийИдентификатор <> Неопределено Тогда
		Строки = СписокФоновыхЗаданий.НайтиСтроки(Новый Структура("Идентификатор", ТекущийИдентификатор));
		Если Строки.Количество() > 0 Тогда
			Элементы.СписокФоновыхЗаданий.ТекущаяСтрока = Строки[0].ПолучитьИдентификатор();
		КонецЕсли;
	КонецЕсли;
	Если Идентификаторы.Количество() > 0 Тогда
		ВыделенныеСтроки.Очистить();
	КонецЕсли;
	Для Каждого Идентификатор из Идентификаторы Цикл
		Строки = СписокФоновыхЗаданий.НайтиСтроки(Новый Структура("Идентификатор", Идентификатор));
		Если Строки.Количество() > 0 Тогда
			ВыделенныеСтроки.Добавить(Строки[0].ПолучитьИдентификатор());
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьРегламентныеЗадания(Команда)
	
	ОбновитьСписокРегламентныхЗаданий ();

КонецПроцедуры

&НаКлиенте
Процедура Расписание(Команда)
	
	#Если ( ВебКлиент Или ТонкийКлиент Или ТолстыйКлиентУправляемоеПриложение ) Тогда
		ВыделенныеСтроки = Элементы.СписокРегламентныхЗаданий.ВыделенныеСтроки;
		Если ВыделенныеСтроки.Количество() > 0 Тогда
			ид = ВыделенныеСтроки.Получить(0);
			задание = СписокРегламентныхЗаданий.НайтиПоИдентификатору( ид );
			Расписание = ПолучитьРасписаниеРегламентногоЗадания ( задание.Идентификатор );
			Диалог = Новый ДиалогРасписанияРегламентногоЗадания ( Расписание );
			п = Новый Структура ();
			п.Вставить ( "ИД", ид );
			оповещение = Новый ОписаниеОповещения ( "ПослеЗакрытияДиалогРасписание", ЭтотОбъект, п );
			диалог.Показать ( оповещение );
		КонецЕсли;
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияДиалогРасписание ( Ответ, Парамы ) Экспорт
	
	Если ( Ответ <> Неопределено ) Тогда
		задание = СписокРегламентныхЗаданий.НайтиПоИдентификатору( Парамы.ИД );
		УстановитьРасписаниеРегламентногоЗадания(задание.Идентификатор, задание.Наименование, Ответ, задание.Метаданные);
		задание.Расписание = Ответ;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокРегламентныхЗаданийПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	п = Новый Структура;
	п.Вставить ( "ИдентификаторЗадания", "" );
	оповещение = Новый ОписаниеОповещения ( "ПослеЗакрытияДиалогРегламентногоЗадания", ЭтотОбъект );
	ОткрытьФорму ( "Обработка.КонсольЗаданий.Форма.ДиалогРегламентногоЗадания", п, ЭтаФорма, , , , оповещение, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс );
	
КонецПроцедуры

&НаКлиенте
Процедура СписокРегламентныхЗаданийПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	ВыделенныеСтроки = Элементы.СписокРегламентныхЗаданий.ВыделенныеСтроки;
	Если ВыделенныеСтроки.Количество() > 0 Тогда
		Строка = СписокРегламентныхЗаданий.НайтиПоИдентификатору(ВыделенныеСтроки.Получить(0));
		п = Новый Структура ();
		п.Вставить("ИдентификаторЗадания", Строка.Идентификатор );
		оповещение = Новый ОписаниеОповещения ( "ПослеЗакрытияДиалогРегламентногоЗадания", ЭтотОбъект );
		ОткрытьФорму ( "Обработка.КонсольЗаданий.Форма.ДиалогРегламентногоЗадания", п, ЭтаФорма, , , , оповещение, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс );
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияДиалогРегламентногоЗадания ( Ответ, Парамы ) Экспорт
	
	ОбновитьСписокРегламентныхЗаданий ();	
	
КонецПроцедуры

&НаКлиенте
Процедура СписокРегламентныхЗаданийПередУдалением(Элемент, Отказ)
	
	Попытка
		Отказ = Истина;
		УдалитьРегламентноеЗадание();
		ОбновитьСписокРегламентныхЗаданий ();
	Исключение
		ПоказатьИнформациюОбОшибке(ИнформацияОбОшибке());
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Процедура УдалитьРегламентноеЗадание()
	
	ВыделенныеСтроки = Элементы.СписокРегламентныхЗаданий.ВыделенныеСтроки;
	Для Каждого Стр из ВыделенныеСтроки Цикл
		Строка = СписокРегламентныхЗаданий.НайтиПоИдентификатору(Стр);
		РегламентноеЗадание = Обработки.КонсольЗаданий.Создать().ПолучитьОбъектРегламентногоЗадания(Строка.Идентификатор);
		Если РегламентноеЗадание.Предопределенное Тогда
			ВызватьИсключение Сообщения.ТекстПоИД ( "НельзяУдалитьПредопределенноеЗадание", Новый Структура ( "Наименование", РегламентноеЗадание.Наименование ) );
		КонецЕсли;
	КонецЦикла;
	Для Каждого Стр из ВыделенныеСтроки Цикл
		Строка = СписокРегламентныхЗаданий.НайтиПоИдентификатору(Стр);
		РегламентноеЗадание = Обработки.КонсольЗаданий.Создать().ПолучитьОбъектРегламентногоЗадания(Строка.Идентификатор);
		РегламентноеЗадание.Удалить();
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьФоновыеЗадания(Команда)
	
	ОбновитьСписокФоновыхЗаданий ();

КонецПроцедуры

&НаКлиенте
Процедура СписокФоновыхЗаданийПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	п = Новый Структура ();
	п.Вставить ( "ИдентификаторЗадания", "" );
	Попытка
		оповещение = Новый ОписаниеОповещения ( "ПослеЗакрытияДиалогФоновогоЗадания", ЭтотОбъект );
		ОткрытьФорму ( "Обработка.КонсольЗаданий.Форма.ДиалогФоновогоЗадания", п, , , , , , РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс );
	Исключение	
		ПоказатьИнформациюОбОшибке(ИнформацияОбОшибке());
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияДиалогФоновогоЗадания ( Ответ, Парамы ) Экспорт
	
	ОбновитьСписокРегламентныхЗаданий ();	
	
КонецПроцедуры

&НаСервере
Функция ПолучитьРасписаниеРегламентногоЗадания(УникальныйНомерЗадания)
	
	ОбъектЗадания = Обработки.КонсольЗаданий.Создать().ПолучитьОбъектРегламентногоЗадания(УникальныйНомерЗадания);
	Если ОбъектЗадания = Неопределено Тогда
		Возврат Новый РасписаниеРегламентногоЗадания;
	КонецЕсли;
	
	Возврат ОбъектЗадания.Расписание;
	
КонецФункции

&НаСервере
Функция УстановитьРасписаниеРегламентногоЗадания(Идентификатор, Наименование, Расписание, ИмяЗадания)
	
	ОбъектЗадания = Обработки.КонсольЗаданий.Создать().ПолучитьОбъектРегламентногоЗадания(Идентификатор);		
	Если ОбъектЗадания = Неопределено Тогда
		РедОбъектЗадания = РегламентныеЗадания.СоздатьРегламентноеЗадание(ИмяЗадания);
		РедОбъектЗадания.Наименование = Наименование;
		РедОбъектЗадания.Использование = Истина;
	Иначе
		РедОбъектЗадания = ОбъектЗадания;
	КонецЕсли;
	
	РедОбъектЗадания.Расписание = Расписание;
	Попытка
		РедОбъектЗадания.Записать();
	Исключение
		ВызватьИсключение Сообщения.ТекстПоИД ( "ОшибкаПриСохраненииРасписания", Новый Структура ( "Ошибка", ОписаниеОшибки () ) ); 
	КонецПопытки;
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура СписокФоновыхЗаданийПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокФоновыхЗаданийПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьФоновоеЗадание(Команда)
	
	Попытка
		ОтменитьФоновыеЗадания();
		ОбновитьСписокФоновыхЗаданий ();
	Исключение	
		ПоказатьИнформациюОбОшибке(ИнформацияОбОшибке());
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Процедура ОтменитьФоновыеЗадания()
	
	ВыделенныеСтроки = Элементы.СписокФоновыхЗаданий.ВыделенныеСтроки;
	Для Каждого Стр из ВыделенныеСтроки Цикл
		Строка = СписокФоновыхЗаданий.НайтиПоИдентификатору(Стр);
		ФоновоеЗадание = ФоновыеЗадания.НайтиПоУникальномуИдентификатору(Строка.Идентификатор);
		ФоновоеЗадание.Отменить();
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаСпискаРегламентныхЗаданий ( Команда )
	
	п = Новый Структура;
	п.Вставить ( "Автообновление", АвтообновлениеСпискаРегламентныхЗаданий );
	п.Вставить ( "ПериодАвтообновления", ПериодАвтообновленияСпискаРегламентныхЗаданий );
	оповещение = Новый ОписаниеОповещения ( "ПослеЗакрытияРегламентныхЗаданий", ЭтотОбъект );
	ОткрытьФорму ( "Обработка.КонсольЗаданий.Форма.ДиалогНастроекСписка", п, ЭтаФорма, , , , оповещение, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс );
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияРегламентныхЗаданий ( Ответ, Парамы ) Экспорт
	
	Если ( Ответ <> Неопределено ) Тогда
		АвтообновлениеСпискаРегламентныхЗаданий = Ответ.Автообновление;
		ПериодАвтообновленияСпискаРегламентныхЗаданий = Ответ.ПериодАвтообновления;
		ОтключитьОбработчикОжидания("ОбработчикАвтообновленияРегламентныхЗаданий");
		Если АвтообновлениеСпискаРегламентныхЗаданий = Истина Тогда
			ПодключитьОбработчикОжидания("ОбработчикАвтообновленияРегламентныхЗаданий", ПериодАвтообновленияСпискаРегламентныхЗаданий);	
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаСпискаФоновыхЗаданий ( Команда )
	
	п = Новый Структура ();
	п.Вставить ( "Автообновление", АвтообновлениеСпискаФоновыхЗаданий );
	п.Вставить ( "ПериодАвтообновления", ПериодАвтообновленияСпискаФоновыхЗаданий );
	оповещение = Новый ОписаниеОповещения ( "ПослеЗакрытияФоновыхЗаданий", ЭтотОбъект );
	ОткрытьФорму ( "Обработка.КонсольЗаданий.Форма.ДиалогНастроекСписка", п, ЭтаФорма, , , , оповещение, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс );
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияФоновыхЗаданий ( Ответ, Парамы ) Экспорт
	
	Если Ответ <> Неопределено Тогда
		АвтообновлениеСпискаФоновыхЗаданий = Ответ.Автообновление;
		ПериодАвтообновленияСпискаФоновыхЗаданий = Ответ.ПериодАвтообновления;
		ОтключитьОбработчикОжидания("ОбработчикАвтообновленияФоновыхЗаданий");
		Если АвтообновлениеСпискаРегламентныхЗаданий = Истина Тогда
			ПодключитьОбработчикОжидания("ОбработчикАвтообновленияФоновыхЗаданий", ПериодАвтообновленияСпискаФоновыхЗаданий);	
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикАвтообновленияФоновыхЗаданий()
	
	ОбновитьСписокФоновыхЗаданий ();

КонецПроцедуры

&НаКлиенте
Процедура ОбработчикАвтообновленияРегламентныхЗаданий()
	
	ОбновитьСписокРегламентныхЗаданий ();

КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборРегламентныхЗаданий(Команда)
	
	п = Новый Структура ();
	п.Вставить("Отбор", ОтборРегламентныхЗаданий);
	оповещение = Новый ОписаниеОповещения ( "ПослеЗакрытияДиалогОтбораРегламентногоЗадания", ЭтотОбъект );
	ОткрытьФорму ( "Обработка.КонсольЗаданий.Форма.ДиалогОтбораРегламентногоЗадания", п, ЭтаФорма, , , , оповещение, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс );
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияДиалогОтбораРегламентногоЗадания ( Ответ, Парамы ) Экспорт
	
	Если Ответ <> Неопределено Тогда
		ОтборРегламентныхЗаданий = Ответ;
		ОтборРегламентныхЗаданийВключен = Истина;
		ОбновитьСписокРегламентныхЗаданий ();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьОтборРегламентныхЗаданий ( Команда )
	
	ОтборРегламентныхЗаданийВключен = Ложь;
	ОбновитьСписокРегламентныхЗаданий ();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьОтборФоновыхЗаданий(Команда)
	
	ОтборФоновыхЗаданийВключен = Ложь;
	ОбновитьСписокФоновыхЗаданий ();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборФоновыхЗаданий ( Команда )
	
	п = Новый Структура ();
	п.Вставить ( "Отбор", ОтборФоновыхЗаданий );
	оповещение = Новый ОписаниеОповещения ( "ПослеЗакрытияДиалогОтбораФоновогоЗадания", ЭтотОбъект );
	ОткрытьФорму ( "Обработка.КонсольЗаданий.Форма.ДиалогОтбораФоновогоЗадания", п, ЭтаФорма, , , , оповещение, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс );
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияДиалогОтбораФоновогоЗадания ( Ответ, Парамы ) Экспорт
	
	Если Ответ <> Неопределено Тогда
		ОтборФоновыхЗаданий = Ответ;
		ОтборФоновыхЗаданийВключен = Истина;
		ОбновитьСписокФоновыхЗаданий ();
	КонецЕсли;
	
КонецПроцедуры